test> show dbs
admin      40.00 KiB
bootcamp   72.00 KiB
config    108.00 KiB
local      40.00 KiB
-----------------------------------------------------
test> use bootcamp
switched to db bootcamp
-----------------------------------------------------
bootcamp> db.employee.insertOne({name:"madhuri", age:24, dept:"data"})
{
  acknowledged: true,
  insertedId: ObjectId("64c0a1d30b0217b485b361b7")
}
------------------------------------------------------
bootcamp> db.employee.find()
[
  {
    _id: ObjectId("64c09b88c01a7f511df541f6"),
    name: 'rachana',
    dept: 'gnt',
    age: 21
  },
  {
    _id: ObjectId("64c09c71c01a7f511df541f7"),
    mobile: 12345,
    manager: 'sujatha',
    address: 'bangalore'
  },
  {
    _id: ObjectId("64c0a1750b0217b485b361b6"),
    name: 'manish',
    age: 22
  },
  {
    _id: ObjectId("64c0a1d30b0217b485b361b7"),
    name: 'madhuri',
    age: 24,
    dept: 'data'
  }
]
-------------------------------------------------------
bootcamp> db.employee.insertMany([{name:"lavanya", age:23, dept:"data"},{name:"adarsh", age:21, dept:"data"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64c0a3220b0217b485b361b8"),
    '1': ObjectId("64c0a3220b0217b485b361b9")
  }
}
---------------------------------------------------------
bootcamp> db.employee.findOne({name:"rachana"})
{
  _id: ObjectId("64c09b88c01a7f511df541f6"),
  name: 'rachana',
  dept: 'gnt',
  age: 21
}
--------------------------------------------------------
bootcamp> db.product.updateOne({_id:2}, {$set: {age:25}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
---------------------------------------------------------
bootcamp> db.product.updateOne({_id:2}, {$rename: {ade:"age"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
---------------------------------------------------------
bootcamp> db.product.insertMany([
...     { "_id" : 1, "name" : "xPhone", "price" : 799, "releaseDate": ISODate("2011-05-14"), "spec" : { "ram" : 4, "screen" : 6.5, "cpu" : 2.66 },"color":["white","black"],"storage":[64,128,256]},
...     { "_id" : 2, "name" : "xTablet", "price" : 899, "releaseDate": ISODate("2011-09-01") , "spec" : { "ram" : 16, "screen" : 9.5, "cpu" : 3.66 },"color":["white","black","purple"],"storage":[128,256,512]},
...     { "_id" : 3, "name" : "SmartTablet", "price" : 899, "releaseDate": ISODate("2015-01-14"), "spec" : { "ram" : 12, "screen" : 9.7, "cpu" : 3.66 },"color":["blue"],"storage":[16,64,128]},
...     { "_id" : 4, "name" : "SmartPad", "price" : 699, "releaseDate": ISODate("2020-05-14"),"spec" : { "ram" : 8, "screen" : 9.7, "cpu" : 1.66 },"color":["white","orange","gold","gray"],"storage":[128,256,1024]},
...     { "_id" : 5, "name" : "SmartPhone", "price" : 599,"releaseDate": ISODate("2022-09-14"), "spec" : { "ram" : 4, "screen" : 5.7, "cpu" : 1.66 },"color":["white","orange","gold","gray"],"storage":[128,256]}
...  ])
{
  acknowledged: true,
  insertedIds: { '0': 1, '1': 2, '2': 3, '3': 4, '4': 5 }
}

bootcamp> db.product.find()
[
  {
    _id: 1,
    name: 'xPhone',
bootcamp>
    releaseDate: ISODate("2011-05-14T00:00:00.000Z"),
    spec: { ram: 4, screen: 6.5, cpu: 2.66 },
    color: [ 'white', 'black' ],
    storage: [ 64, 128, 256 ]
  },
  {
    _id: 2,
    name: 'xTablet',
    price: 899,
    releaseDate: ISODate("2011-09-01T00:00:00.000Z"),
    spec: { ram: 16, screen: 9.5, cpu: 3.66 },
    color: [ 'white', 'black', 'purple' ],
    storage: [ 128, 256, 512 ]
  },
  {
    _id: 3,
    name: 'SmartTablet',
    price: 899,
    releaseDate: ISODate("2015-01-14T00:00:00.000Z"),
    spec: { ram: 12, screen: 9.7, cpu: 3.66 },
    color: [ 'blue' ],
    storage: [ 16, 64, 128 ]
  },
  {
    _id: 4,
    name: 'SmartPad',
    price: 699,
    releaseDate: ISODate("2020-05-14T00:00:00.000Z"),
    spec: { ram: 8, screen: 9.7, cpu: 1.66 },
    color: [ 'white', 'orange', 'gold', 'gray' ],
    storage: [ 128, 256, 1024 ]
  },
  {
    _id: 5,
    name: 'SmartPhone',
    price: 599,
    releaseDate: ISODate("2022-09-14T00:00:00.000Z"),
    spec: { ram: 4, screen: 5.7, cpu: 1.66 },
    color: [ 'white', 'orange', 'gold', 'gray' ],
    storage: [ 128, 256 ]
  }
]
bootcamp> db.product.find()
[
  {
    _id: 1,
    name: 'xPhone',
    price: 799,
    releaseDate: ISODate("2011-05-14T00:00:00.000Z"),
    spec: { ram: 4, screen: 6.5, cpu: 2.66 },
    color: [ 'white', 'black' ],
    storage: [ 64, 128, 256 ]
  },
  {
    _id: 2,
    name: 'xTablet',
    price: 899,
    releaseDate: ISODate("2011-09-01T00:00:00.000Z"),
    spec: { ram: 16, screen: 9.5, cpu: 3.66 },
    color: [ 'white', 'black', 'purple' ],
    storage: [ 128, 256, 512 ]
  },
  {
    _id: 3,
    name: 'SmartTablet',
    price: 899,
    releaseDate: ISODate("2015-01-14T00:00:00.000Z"),
    spec: { ram: 12, screen: 9.7, cpu: 3.66 },
    color: [ 'blue' ],
    storage: [ 16, 64, 128 ]
  },
  {
    _id: 4,
    name: 'SmartPad',
    price: 699,
    releaseDate: ISODate("2020-05-14T00:00:00.000Z"),
    spec: { ram: 8, screen: 9.7, cpu: 1.66 },
    color: [ 'white', 'orange', 'gold', 'gray' ],
    storage: [ 128, 256, 1024 ]
  },
  {
    _id: 5,
    name: 'SmartPhone',
    price: 599,
    releaseDate: ISODate("2022-09-14T00:00:00.000Z"),
    spec: { ram: 4, screen: 5.7, cpu: 1.66 },
    color: [ 'white', 'orange', 'gold', 'gray' ],
    storage: [ 128, 256 ]
  }
]
---------------------------------------------------------
bootcamp> db.product.find({price: {$eq: 899}}, {name:1})
[ { _id: 2, name: 'xTablet' }, { _id: 3, name: 'SmartTablet' } ]
---------------------------------------------------------
bootcamp> db.product.find({price:{$lte:699}})
[
  {
    _id: 4,
    name: 'SmartPad',
    price: 699,
    releaseDate: ISODate("2020-05-14T00:00:00.000Z"),
    spec: { ram: 8, screen: 9.7, cpu: 1.66 },
    color: [ 'white', 'orange', 'gold', 'gray' ],
    storage: [ 128, 256, 1024 ]
  },
  {
    _id: 5,
    name: 'SmartPhone',
    price: 599,
    releaseDate: ISODate("2022-09-14T00:00:00.000Z"),
    spec: { ram: 4, screen: 5.7, cpu: 1.66 },
    color: [ 'white', 'orange', 'gold', 'gray' ],
    storage: [ 128, 256 ]
  }
]
---------------------------------------------------------
bootcamp> db.product.find({price:{$gt:599}})
[
  {
    _id: 1,
    name: 'xPhone',
    price: 799,
    releaseDate: ISODate("2011-05-14T00:00:00.000Z"),
    spec: { ram: 4, screen: 6.5, cpu: 2.66 },
    color: [ 'white', 'black' ],
    storage: [ 64, 128, 256 ]
  },
  {
    _id: 2,
    name: 'xTablet',
    price: 899,
    releaseDate: ISODate("2011-09-01T00:00:00.000Z"),
    spec: { ram: 16, screen: 9.5, cpu: 3.66 },
    color: [ 'white', 'black', 'purple' ],
    storage: [ 128, 256, 512 ]
  },
  {
    _id: 3,
    name: 'SmartTablet',
    price: 899,
    releaseDate: ISODate("2015-01-14T00:00:00.000Z"),
    spec: { ram: 12, screen: 9.7, cpu: 3.66 },
    color: [ 'blue' ],
    storage: [ 16, 64, 128 ]
  },
  {
    _id: 4,
    name: 'SmartPad',
    price: 699,
    releaseDate: ISODate("2020-05-14T00:00:00.000Z"),
    spec: { ram: 8, screen: 9.7, cpu: 1.66 },
    color: [ 'white', 'orange', 'gold', 'gray' ],
    storage: [ 128, 256, 1024 ]
  }
]
---------------------------------------------------------
bootcamp> db.product.find({$and:[{price:{$eq:899}}, {color:{$in:["white", "black"]}}]})
[
  {
    _id: 2,
    name: 'xTablet',
    price: 899,
    releaseDate: ISODate("2011-09-01T00:00:00.000Z"),
    spec: { ram: 16, screen: 9.5, cpu: 3.66 },
    color: [ 'white', 'black', 'purple' ],
    storage: [ 128, 256, 512 ]
  }
]
---------------------------------------------------------

---------------------------------------------------------
bootcamp> db.employee.find()
[
  {
    _id: ObjectId("64c09b88c01a7f511df541f6"),
    name: 'rachana',
    dept: 'gnt',
    age: 21
  },
  {
    _id: ObjectId("64c09c71c01a7f511df541f7"),
    mobile: 12345,
    manager: 'sujatha',
    address: 'bangalore'
  }
]

bootcamp> db.product.find({$and:[{price:{$eq:899}}, {color:{$in:["white", "black"]}}]})
[
  {
    _id: 2,
    name: 'xTablet',
    price: 899,
    releaseDate: ISODate("2011-09-01T00:00:00.000Z"),
    spec: { ram: 16, screen: 9.5, cpu: 3.66 },
    color: [ 'white', 'black', 'purple' ],
    storage: [ 128, 256, 512 ]
  }
]
------------------------------------------------------
bootcamp> db.product.find({$or:[{price:899}, {name:"xPhone"}]})
[
  {
    _id: 1,
    name: 'xPhone',
    price: 799,
    releaseDate: ISODate("2011-05-14T00:00:00.000Z"),
    spec: { ram: 4, screen: 6.5, cpu: 2.66 },
    color: [ 'white', 'black' ],
    storage: [ 64, 128, 256 ]
  },
  {
    _id: 2,
    name: 'xTablet',
    price: 899,
    releaseDate: ISODate("2011-09-01T00:00:00.000Z"),
    spec: { ram: 16, screen: 9.5, cpu: 3.66 },
    color: [ 'white', 'black', 'purple' ],
    storage: [ 128, 256, 512 ]
  },
  {
    _id: 3,
    name: 'SmartTablet',
    price: 899,
    releaseDate: ISODate("2015-01-14T00:00:00.000Z"),
    spec: { ram: 12, screen: 9.7, cpu: 3.66 },
    color: [ 'blue' ],
    storage: [ 16, 64, 128 ]
  }
]
--------------------------------------------------------
bootcamp> db.employee.deleteOne({name:"rachana"})
{ acknowledged: true, deletedCount: 1 }
--------------------------------------------------------
bootcamp> db.employee.deleteMany({dept:"data"})
{ acknowledged: true, deletedCount: 2 }
--------------------------------------------------------
bootcamp> db.product.find({color:{$size:3}}, {name:1, storage:1})
[ { _id: 2, name: 'xTablet', storage: [ 128, 256, 512 ] } ]
--------------------------------------------------------
bootcamp> db.product.find({storage:{$all:[128]}}, {name:1, releaseDate:1})
[
  {
    _id: 1,
    name: 'xPhone',
    releaseDate: ISODate("2011-05-14T00:00:00.000Z")
  },
  {
    _id: 2,
    name: 'xTablet',
    releaseDate: ISODate("2011-09-01T00:00:00.000Z")
  },
  {
    _id: 3,
    name: 'SmartTablet',
    releaseDate: ISODate("2015-01-14T00:00:00.000Z")
  },
  {
    _id: 4,
    name: 'SmartPad',
    releaseDate: ISODate("2020-05-14T00:00:00.000Z")
  },
  {
    _id: 5,
    name: 'SmartPhone',
    releaseDate: ISODate("2022-09-14T00:00:00.000Z")
  }
]
--------------------------------------------------------
bootcamp> db.product.find({storage:{$elemMatch:{$eq:128}}}, {name:1, releaseDate:1})
[
  {
    _id: 1,
    name: 'xPhone',
    releaseDate: ISODate("2011-05-14T00:00:00.000Z")
  },
  {
    _id: 2,
    name: 'xTablet',
    releaseDate: ISODate("2011-09-01T00:00:00.000Z")
  },
  {
    _id: 3,
    name: 'SmartTablet',
    releaseDate: ISODate("2015-01-14T00:00:00.000Z")
  },
  {
    _id: 4,
    name: 'SmartPad',
    releaseDate: ISODate("2020-05-14T00:00:00.000Z")
  },
  {
    _id: 5,
    name: 'SmartPhone',
    releaseDate: ISODate("2022-09-14T00:00:00.000Z")
  }
]
-------------------------------------------------------
bootcamp> db.product.updateOne({_id:1}, {$inc:{price:50}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
--------------------------------------------------------
bootcamp> db.product.updateMany({_id:6}, {$set:{price:500}}, {upsert:true})
{
  acknowledged: true,
  insertedId: 6,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 1
}
bootcamp> db.product.find()
[
  {
    _id: 1,
    name: 'xPhone',
    releaseDate: ISODate("2011-05-14T00:00:00.000Z"),
    spec: { ram: 4, screen: 6.5, cpu: 2.66 },
    color: [ 'white', 'black' ],
    storage: [ 64, 128, 256 ],
    cost: 849
  },
  {
    _id: 2,
    name: 'xTablet',
    releaseDate: ISODate("2011-09-01T00:00:00.000Z"),
    spec: { ram: 16, screen: 9.5, cpu: 3.66 },
    color: [ 'white', 'black', 'purple' ],
    storage: [ 128, 256, 512 ],
    cost: 899
  },
  {
    _id: 3,
    name: 'SmartTablet',
    releaseDate: ISODate("2015-01-14T00:00:00.000Z"),
    spec: { ram: 12, screen: 9.7, cpu: 3.66 },
    color: [ 'blue' ],
    storage: [ 16, 64, 128 ],
    cost: 899
  },
  {
    _id: 4,
    name: 'SmartPad',
    releaseDate: ISODate("2020-05-14T00:00:00.000Z"),
    spec: { ram: 8, screen: 9.7, cpu: 1.66 },
    color: [ 'white', 'orange', 'gold', 'gray' ],
    storage: [ 128, 256, 1024 ],
    cost: 699
  },
  {
    _id: 5,
    name: 'SmartPhone',
    releaseDate: ISODate("2022-09-14T00:00:00.000Z"),
    spec: { ram: 4, screen: 5.7, cpu: 1.66 },
    color: [ 'white', 'orange', 'gold', 'gray' ],
    storage: [ 128, 256 ],
    cost: 599
  },
  { _id: 6, price: 500 }
]

bootcamp> db.employee.aggregate([{$group:{_id:"$dept", totalSal:{$sum: "$salary"}}}, {$sort:{totalSal:-1}}])
[
  { _id: 'data', totalSal: 34000 },
  { _id: 'TSE', totalSal: 33000 },
  { _id: 'GNT', totalSal: 30000 }
]

bootcamp> db.mongo_practise.find()
[
  {
    _id: ObjectId("64c0f4e31a07c52ee956fc64"),
    title: 'fight club',
    writer: 'chuck',
    year: 1999,
    actors: [ 'brad pitt', 'edward norton' ]
  },
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'john travolta', 'uma thurman' ]
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc66"),
    title: 'inglorious basterds',
    writer: 'quentin tarantino',
    year: 2009,
    actors: [ 'bradd pitt', 'diane kruger', 'eli roth' ]
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc67"),
    title: 'the hobbit: an unexpected journey',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc68"),
    title: 'the hobbit: the desolation of smaug',
    writer: 'j.r.r.tolkein',
    year: 2013,
    franchise: 'the hobbit'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc69"),
    title: 'the hobbit: the battle of the five armies',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit',
    synopsis: 'bilbo and comany are forced to engage in battle'
  },
  {
    _id: ObjectId("64c0f9ea1a07c52ee956fc6a"),
    title: "pee wee herman's big adventure"
  },
  { _id: ObjectId("64c0f9ea1a07c52ee956fc6b"), title: 'avatar' }
]
bootcamp> db.mongo_practise.find({writer:"quentin quarantino"})

bootcamp> db.mongo_practise.find({writer:"quentin tarantino"})
[
  {
    _id: ObjectId("64c0f7561a07c52ee956fc66"),
    title: 'inglorious basterds',
    writer: 'quentin tarantino',
    year: 2009,
    actors: [ 'bradd pitt', 'diane kruger', 'eli roth' ]
  }
]
bootcamp> db.mongo_practise.find({actors:"brad pitt"})
[
  {
    _id: ObjectId("64c0f4e31a07c52ee956fc64"),
    title: 'fight club',
    writer: 'chuck',
    year: 1999,
    actors: [ 'brad pitt', 'edward norton' ]
  }
]
bootcamp> db.mongo_practise.find({franchise:"the hobbit"})
[
  {
    _id: ObjectId("64c0f7561a07c52ee956fc67"),
    title: 'the hobbit: an unexpected journey',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc68"),
    title: 'the hobbit: the desolation of smaug',
    writer: 'j.r.r.tolkein',
    year: 2013,
    franchise: 'the hobbit'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc69"),
    title: 'the hobbit: the battle of the five armies',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit',
    synopsis: 'bilbo and comany are forced to engage in battle'
  }
]
bootcamp> db.mongo_practise.find({year:{$lt:2000}})
[
  {
    _id: ObjectId("64c0f4e31a07c52ee956fc64"),
    title: 'fight club',
    writer: 'chuck',
    year: 1999,
    actors: [ 'brad pitt', 'edward norton' ]
  },
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'john travolta', 'uma thurman' ]
  }
]
bootcamp> db.mongo_practise.find({year:{$gt:1990, $lt:2000}})
[
  {
    _id: ObjectId("64c0f4e31a07c52ee956fc64"),
    title: 'fight club',
    writer: 'chuck',
    year: 1999,
    actors: [ 'brad pitt', 'edward norton' ]
  },
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'john travolta', 'uma thurman' ]
  }
]
bootcamp> db.mongo_practise.find({year:{$lt:2000, $gt:2010}})

bootcamp> db.mongo_practise.find()
[
  {
    _id: ObjectId("64c0f4e31a07c52ee956fc64"),
    title: 'fight club',
    writer: 'chuck',
    year: 1999,
    actors: [ 'brad pitt', 'edward norton' ]
  },
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'john travolta', 'uma thurman' ]
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc66"),
    title: 'inglorious basterds',
    writer: 'quentin tarantino',
    year: 2009,
    actors: [ 'bradd pitt', 'diane kruger', 'eli roth' ]
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc67"),
    title: 'the hobbit: an unexpected journey',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc68"),
    title: 'the hobbit: the desolation of smaug',
    writer: 'j.r.r.tolkein',
    year: 2013,
    franchise: 'the hobbit'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc69"),
    title: 'the hobbit: the battle of the five armies',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit',
    synopsis: 'bilbo and comany are forced to engage in battle'
  },
  {
    _id: ObjectId("64c0f9ea1a07c52ee956fc6a"),
    title: "pee wee herman's big adventure"
  },
  { _id: ObjectId("64c0f9ea1a07c52ee956fc6b"), title: 'avatar' }
]
bootcamp> db.mongo_practise.find({$or:[{year:{$lt:2000}}, {year:{$gt:2010}}]})
[
  {
    _id: ObjectId("64c0f4e31a07c52ee956fc64"),
    title: 'fight club',
    writer: 'chuck',
    year: 1999,
    actors: [ 'brad pitt', 'edward norton' ]
  },
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'john travolta', 'uma thurman' ]
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc67"),
    title: 'the hobbit: an unexpected journey',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc68"),
    title: 'the hobbit: the desolation of smaug',
    writer: 'j.r.r.tolkein',
    year: 2013,
    franchise: 'the hobbit'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc69"),
    title: 'the hobbit: the battle of the five armies',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit',
    synopsis: 'bilbo and comany are forced to engage in battle'
  }
]
bootcamp> db.mongo_practise.update({_id:ObjectId("64c0f7561a07c52ee956fc67")}, {$set:{synopsis:"set out to lonely mountains"}}, {upsert:true})
DeprecationWarning: Collection.update() is deprecated. Use updateOne, updateMany, or bulkWrite.
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
bootcamp> db.mongo_practise.find({id:ObjectId("64c0f7561a07c52ee956fc67")})

bootcamp> db.mongo_practise.find({synopsis:1})

bootcamp> db.mongo_practise.find()
[
  {
    _id: ObjectId("64c0f4e31a07c52ee956fc64"),
    title: 'fight club',
    writer: 'chuck',
    year: 1999,
    actors: [ 'brad pitt', 'edward norton' ]
  },
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'john travolta', 'uma thurman' ]
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc66"),
    title: 'inglorious basterds',
    writer: 'quentin tarantino',
    year: 2009,
    actors: [ 'bradd pitt', 'diane kruger', 'eli roth' ]
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc67"),
    title: 'the hobbit: an unexpected journey',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit',
    synopsis: 'set out to lonely mountains'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc68"),
    title: 'the hobbit: the desolation of smaug',
    writer: 'j.r.r.tolkein',
    year: 2013,
    franchise: 'the hobbit'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc69"),
    title: 'the hobbit: the battle of the five armies',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit',
    synopsis: 'bilbo and comany are forced to engage in battle'
  },
  {
    _id: ObjectId("64c0f9ea1a07c52ee956fc6a"),
    title: "pee wee herman's big adventure"
  },
  { _id: ObjectId("64c0f9ea1a07c52ee956fc6b"), title: 'avatar' }
]
bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f7561a07c52ee956fc67")})
[
  {
    _id: ObjectId("64c0f7561a07c52ee956fc67"),
    title: 'the hobbit: an unexpected journey',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit',
    synopsis: 'set out to lonely mountains'
  }
]
bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f7561a07c52ee956fc68")}, {$set:{synopsis:"quest to reclaim erebor"}}, {upsert:true})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f7561a07c52ee956fc68")})
[
  {
    _id: ObjectId("64c0f7561a07c52ee956fc68"),
    title: 'the hobbit: the desolation of smaug',
    writer: 'j.r.r.tolkein',
    year: 2013,
    franchise: 'the hobbit',
    synopsis: 'quest to reclaim erebor'
  }
]
bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$set:{actors:["samuel jackson"]}}, {upsert:true})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f56d1a07c52ee956fc65"))})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:64)

> 1 | db.mongo_practise.find({_id:ObjectId("64c0f56d1a07c52ee956fc65"))})
    |                                                                 ^
  2 |

bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f56d1a07c52ee956fc65")})
[
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'samuel jackson' ]
  }
]
bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$push:{actors:["samuel jackson"]}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f56d1a07c52ee956fc65")})
[
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'samuel jackson', [ 'samuel jackson' ] ]
  }
]
bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$push:{actors:"samuel jackson"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f56d1a07c52ee956fc65")})
[
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'samuel jackson', [ 'samuel jackson' ], 'samuel jackson' ]
  }
]
bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$pop:{actors:"samuel jackson"}})
MongoServerError: Expected a number in: actors: "samuel jackson"
bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f56d1a07c52ee956fc65")})
[
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'samuel jackson', [ 'samuel jackson' ], 'samuel jackson' ]
  }
]
bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$pull:{actors:"samuel jackson"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f56d1a07c52ee956fc65")})
[
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ [ 'samuel jackson' ] ]
  }
]
bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$pull:{actors:["samuel jackson"]}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f56d1a07c52ee956fc65")})
[
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: []
  }
]
bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$push:{actors:"samuel jackson", "uma thurman", "john travolta"}})
Uncaught:
SyntaxError: Unexpected token (1:118)

> 1 | db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$push:{actors:"samuel jackson", "uma thurman", "john travolta"}})
    |                                                                                                                       ^
  2 |

bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$push:{actors:"uma thurman"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f56d1a07c52ee956fc65")})
[
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'uma thurman' ]
  }
]
bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$push:{actors:"john travolta"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
bootcamp> db.mongo_practise.updateOne({_id:ObjectId("64c0f56d1a07c52ee956fc65")}, {$push:{actors:"samuel jackson"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
bootcamp> db.mongo_practise.find({_id:ObjectId("64c0f56d1a07c52ee956fc65")})
[
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'uma thurman', 'john travolta', 'samuel jackson' ]
  }
]
bootcamp> db.mongo_practise.find({synopsis:"bilbo"})

bootcamp> db.mongo_practise.find({synopsis:{$regex:"bilbo"}})
[
  {
    _id: ObjectId("64c0f7561a07c52ee956fc69"),
    title: 'the hobbit: the battle of the five armies',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit',
    synopsis: 'bilbo and comany are forced to engage in battle'
  }
]
bootcamp> db.mongo_practise.find({synopsis:{$regex:"bilbo"}}, {title:1})
[
  {
    _id: ObjectId("64c0f7561a07c52ee956fc69"),
    title: 'the hobbit: the battle of the five armies'
  }
]
bootcamp> db.mongo_practise.find({synopsis:{$regex:"gandalf"}})

bootcamp> db.mongo_practise.find()
[
  {
    _id: ObjectId("64c0f4e31a07c52ee956fc64"),
    title: 'fight club',
    writer: 'chuck',
    year: 1999,
    actors: [ 'brad pitt', 'edward norton' ]
  },
  {
    _id: ObjectId("64c0f56d1a07c52ee956fc65"),
    title: 'pulp fiction',
    writer: 'Quentin tarantino',
    year: 1994,
    actors: [ 'uma thurman', 'john travolta', 'samuel jackson' ]
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc66"),
    title: 'inglorious basterds',
    writer: 'quentin tarantino',
    year: 2009,
    actors: [ 'bradd pitt', 'diane kruger', 'eli roth' ]
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc67"),
    title: 'the hobbit: an unexpected journey',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit',
    synopsis: 'set out to lonely mountains'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc68"),
    title: 'the hobbit: the desolation of smaug',
    writer: 'j.r.r.tolkein',
    year: 2013,
    franchise: 'the hobbit',
    synopsis: 'quest to reclaim erebor'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc69"),
    title: 'the hobbit: the battle of the five armies',
    writer: 'j.r.r.tolkein',
    year: 2012,
    franchise: 'the hobbit',
    synopsis: 'bilbo and comany are forced to engage in battle'
  },
  {
    _id: ObjectId("64c0f9ea1a07c52ee956fc6a"),
    title: "pee wee herman's big adventure"
  },
  { _id: ObjectId("64c0f9ea1a07c52ee956fc6b"), title: 'avatar' }
]
bootcamp> db.mongo_practise.find({$or:[{synopsis:{$regex:"dwarves"}}, {$synopsis:{$regex:"hobbit"}}]})
MongoServerError: unknown top level operator: $synopsis. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.
bootcamp> db.mongo_practise.find({$or:[{synopsis:{$regex:"dwarves"}}, {synopsis:{$regex:"hobbit"}}]})

bootcamp> db.mongo_practise.deleteOne({title:"pee wee herman's big adventure"})
{ acknowledged: true, deletedCount: 1 }
bootcamp> db.mongo_practise.find({}, {title:1})
[
  { _id: ObjectId("64c0f4e31a07c52ee956fc64"), title: 'fight club' },
  { _id: ObjectId("64c0f56d1a07c52ee956fc65"), title: 'pulp fiction' },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc66"),
    title: 'inglorious basterds'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc67"),
    title: 'the hobbit: an unexpected journey'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc68"),
    title: 'the hobbit: the desolation of smaug'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc69"),
    title: 'the hobbit: the battle of the five armies'
  },
  { _id: ObjectId("64c0f9ea1a07c52ee956fc6b"), title: 'avatar' }
]
bootcamp> db.mongo_practise.remove({title:"avatar"})
DeprecationWarning: Collection.remove() is deprecated. Use deleteOne, deleteMany, findOneAndDelete, or bulkWrite.
{ acknowledged: true, deletedCount: 1 }
bootcamp> db.mongo_practise.find({}, {title:1})
[
  { _id: ObjectId("64c0f4e31a07c52ee956fc64"), title: 'fight club' },
  { _id: ObjectId("64c0f56d1a07c52ee956fc65"), title: 'pulp fiction' },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc66"),
    title: 'inglorious basterds'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc67"),
    title: 'the hobbit: an unexpected journey'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc68"),
    title: 'the hobbit: the desolation of smaug'
  },
  {
    _id: ObjectId("64c0f7561a07c52ee956fc69"),
    title: 'the hobbit: the battle of the five armies'
  }
]
bootcamp> db.users.insertMany([{username:"goodguygreg", first_name:"good_guy", last_name:"greg"}, {username:"scumbagsteve", full_name:[{first_name:"scumbag", last_name:"steve"}]}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64c1034f1a07c52ee956fc6c"),
    '1': ObjectId("64c1034f1a07c52ee956fc6d")
  }
}
bootcamp> db.users.find()
[
  {
    _id: ObjectId("64c1034f1a07c52ee956fc6c"),
    username: 'goodguygreg',
    first_name: 'good_guy',
    last_name: 'greg'
  },
  {
    _id: ObjectId("64c1034f1a07c52ee956fc6d"),
    username: 'scumbagsteve',
    full_name: [ { first_name: 'scumbag', last_name: 'steve' } ]
  }
]
bootcamp> db.users.insertMany([{username:"goodguygreg", first_name:"good_guy", last_name:"greg"}, {username:"scumbagsteve", full_name:{first_name:"scumbag", last_name:"steve"}}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64c105731a07c52ee956fc6e"),
    '1': ObjectId("64c105731a07c52ee956fc6f")
  }
}
bootcamp> db.users.find()
[
  {
    _id: ObjectId("64c1034f1a07c52ee956fc6c"),
    username: 'goodguygreg',
    first_name: 'good_guy',
    last_name: 'greg'
  },
  {
    _id: ObjectId("64c1034f1a07c52ee956fc6d"),
    username: 'scumbagsteve',
    full_name: [ { first_name: 'scumbag', last_name: 'steve' } ]
  },
  {
    _id: ObjectId("64c105731a07c52ee956fc6e"),
    username: 'goodguygreg',
    first_name: 'good_guy',
    last_name: 'greg'
  },
  {
    _id: ObjectId("64c105731a07c52ee956fc6f"),
    username: 'scumbagsteve',
    full_name: { first_name: 'scumbag', last_name: 'steve' }
  }
]
bootcamp> db.users.drop()
true
bootcamp> db.users.find()

bootcamp> db.users.insertMany([{username:"goodguygreg", first_name:"good guy", last_name:"greg"}, {username:"scumbagsteve", full_name:{first_name:"scumbag", last_name: "steve"}}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64c106231a07c52ee956fc70"),
    '1': ObjectId("64c106231a07c52ee956fc71")
  }
}
bootcamp> db.users.find()
[
  {
    _id: ObjectId("64c106231a07c52ee956fc70"),
    username: 'goodguygreg',
    first_name: 'good guy',
    last_name: 'greg'
  },
  {
    _id: ObjectId("64c106231a07c52ee956fc71"),
    username: 'scumbagsteve',
    full_name: { first_name: 'scumbag', last_name: 'steve' }
  }
]
bootcamp> db.posts.insertMany([{username:"goodguygreg", title:"passes out at a party", body:"wakes up early and cleans house"}, {username:"goodguygreg", title:"steals your identity", body:"raises your credit score"}, {username:"goodguygreg", title:"reports a bug in your code", body:"send you a pull request"}, {username:"scumbagsteve", title:"borrows something", body:"sells it"}, {username:"scumbagsteve", title:"borrows everything", body:"the end"}, {username:"scumbagsteve", title:"forks your repo on github", body:"sets to private"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64c107241a07c52ee956fc72"),
    '1': ObjectId("64c107241a07c52ee956fc73"),
    '2': ObjectId("64c107241a07c52ee956fc74"),
    '3': ObjectId("64c107241a07c52ee956fc75"),
    '4': ObjectId("64c107241a07c52ee956fc76"),
    '5': ObjectId("64c107241a07c52ee956fc77")
  }
}
bootcamp> db.posts.find()
[
  {
    _id: ObjectId("64c107241a07c52ee956fc72"),
    username: 'goodguygreg',
    title: 'passes out at a party',
    body: 'wakes up early and cleans house'
  },
  {
    _id: ObjectId("64c107241a07c52ee956fc73"),
    username: 'goodguygreg',
    title: 'steals your identity',
    body: 'raises your credit score'
  },
  {
    _id: ObjectId("64c107241a07c52ee956fc74"),
    username: 'goodguygreg',
    title: 'reports a bug in your code',
    body: 'send you a pull request'
  },
  {
    _id: ObjectId("64c107241a07c52ee956fc75"),
    username: 'scumbagsteve',
    title: 'borrows something',
    body: 'sells it'
  },
  {
    _id: ObjectId("64c107241a07c52ee956fc76"),
    username: 'scumbagsteve',
    title: 'borrows everything',
    body: 'the end'
  },
  {
    _id: ObjectId("64c107241a07c52ee956fc77"),
    username: 'scumbagsteve',
    title: 'forks your repo on github',
    body: 'sets to private'
  }
]